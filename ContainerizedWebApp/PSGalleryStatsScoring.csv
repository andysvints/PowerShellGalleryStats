Title,Description,Category, Weight, MaxScore, ScoreLogic,Recommendation,SuggestedTools
IconURL,IconURL present,Metadata,30,1, $Module.IconUrl.Length -gt 0,Add an icon URL to make your module visually identifiable in the PowerShell Gallery,PSSVG;https://pssvg.start-automating.com/
ProjectUrl,ProjectURL present,Metadata,30,1, $Module.ProjectUrl.Length -gt 0,"Provide a project URL for users to access the source code, documentation, or further details about your module.",GitHub;https://github.com/
LicenseUrl,LicenseURL present,Metadata,30,1, $Module.LicenseUrl.Length -gt 0,Include a license URL to clearly communicate the terms of use for your module and  make it easier for other people to contribute.,Open Source License;https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/adding-a-license-to-a-repository
Description,Description has more than 100 charactrers,Metadata,30,1, $Module.Description.Length -gt 100,Expand the description to give users a better understanding of what your module does.,
ReleaseNotes,ReleaseNotes present,Metadata,30,1, $Module.ReleaseNotes.Length -ne 0,"Add release notes to inform users of changes, fixes, or improvements in each version.",
TagsCount,More than 5 tags are present,Metadata,30,1, [int]$Module.TagsCount -gt 5,Add more relevant tags to improve your module's discoverability in search results.,
ItemType,ItemType is Module,Metadata,30,1,"$Module.ItemType -eq ""Module""","Ensure your item type is set as ""Module"" to accurately categorize it within the PowerShell Gallery.",
OwnerCount,More than 1 owner,Metadata,30,1, [int]$Module.OwnersCount -gt 1,Invite additional owners to your module to share responsibility and improve collaboration.,
MultipleVersions,Module has more than one version published,Metadata,30,1, [int]$Module.DownloadCount -gt  $Module.VersionDownloadCount,Publish multiple versions to demonstrate ongoing development and support for your module.,
DownloadCount,More than 500 downloads,Metadata,30,1, [int]$Module.DownloadCount -gt 500,"Promote your module to reach over 500 downloads, enhancing its visibility and credibility in the community.",
CmdletDesign,How advanced functions/cmdlets are designed,SourceCode,70,1,Invoke-ScriptAnalyzer -Path $ModuleDir -Settings CmdletDesign -Recurse ,Follow advanced function/cmdlet best practices (approved verbs; [CmdletBinding()]; return objects),PSScriptAnalyzer;https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/overview; Microsoftâ€™s Approved Verbs list (Get-Verb); https://learn.microsoft.com/uk-ua/powershell/module/microsoft.powershell.core/get-verb
CodeFormatting,Style and consistency of your code layout,SourceCode,70,1,Invoke-ScriptAnalyzer -Path $ModuleDir -Recurse -Settings CodeFormatting,Keep consistent indentation; brace style and whitespace,PSScriptAnalyzer(Invoke-Formatter);https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/overview; PowerShell Practice & Style Guide; https://poshcode.gitbook.io/powershell-practice-and-style/style-guide/introduction
PSGallery,Publishing readiness for the PowerShell Gallery,SourceCode,70,1,Invoke-ScriptAnalyzer -Path $ModuleDir -Recurse -Settings PSGallery,Ensure module manifest; metadata and exports meet PowerShell Gallery requirements,PSScriptAnalyzer;https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/overview; Update-ModuleManifest;https://learn.microsoft.com/en-us/powershell/module/powershellget/update-modulemanifest; PSModuleIO;https://psmodule.io/
ScriptingStyle,General scripting practices,SourceCode,70,1,Invoke-ScriptAnalyzer -Path $moduledir -Recurse -Settings ScriptingStyle,Write idiomatic PowerShell (no aliases; no Write-Host; consistent casing),PSScriptAnalyzer(Invoke-Formatter);https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/overview; PowerShell Practice & Style Guide; https://poshcode.gitbook.io/powershell-practice-and-style/style-guide/introduction
ScriptSecurity,Security-related checks,SourceCode,70,1,Invoke-ScriptAnalyzer -Path $moduledir -Recurse -Settings ScriptSecurity,Avoid insecure patterns (no Invoke-Expression; no plaintext secrets; validate inputs),PSScriptAnalyzer(Invoke-Formatter);https://learn.microsoft.com/en-us/powershell/utility-modules/psscriptanalyzer/overview; SecretManagement module;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.secretmanagement; security best practices;https://poshcode.gitbook.io/powershell-practice-and-style/best-practices/security
